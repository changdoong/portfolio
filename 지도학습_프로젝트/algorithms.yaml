decision_tree:
  name: Decision Tree
  description: >
    데이터의 특성을 기준으로 조건 분기를 반복하며 학습하는 트리 기반 모델.
    예/아니오 질문을 통해 데이터를 분할하고 최종적으로 클래스 또는 값을 예측.
  pros:
    - 해석이 쉽고 시각화 가능
    - 범주형과 수치형 변수 모두 처리 가능
  cons:
    - 과적합에 민감함
    - 작은 변화에도 구조가 크게 달라질 수 있음
  use_cases:
    - 고객 이탈 예측
    - 질병 진단 분류
    - 간단한 규칙 기반 분류 문제

random_forest:
  name: Random Forest
  description: >
    여러 개의 결정 트리를 무작위로 생성하고, 그 예측을 집계하여 최종 결과를 도출하는 앙상블 학습 방법.
    과적합을 줄이고 일반화 성능을 향상시킴.
  pros:
    - 과적합 감소
    - 변수 중요도 확인 가능
    - 대부분의 경우 안정적인 성능
  cons:
    - 모델 해석이 어려움
    - 느린 예측 속도 (트리 수가 많을 경우)
  use_cases:
    - 금융 사기 탐지
    - 이미지 분류
    - 변수 선택 및 피처 중요도 분석

adaboost:
  name: AdaBoost (Adaptive Boosting)
  description: >
    여러 약한 분류기를 순차적으로 학습시키며, 이전 분류기의 오류에 가중치를 두어 다음 분류기가 이를 보완하도록 하는 앙상블 알고리즘.
    일반적으로 결정 깊이 1짜리 트리를 기본 분류기로 사용함.
  pros:
    - 간단한 약한 학습기를 통해 성능 향상 가능
    - 과적합에 덜 민감함
  cons:
    - 이상치에 민감함
    - 병렬화 어려움 (순차 학습이기 때문)
  use_cases:
    - 얼굴 인식
    - 텍스트 분류
    - 웹 스팸 필터링
